{"version":3,"sources":["Chart.js","DropDown.js","logo.svg","Header.js","App.js","reportWebVitals.js","index.js"],"names":["Chart","props","data","className","style","width","height","margin","ResponsiveContainer","AreaChart","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","label","value","position","reversed","dataKey","YAxis","tickFormatter","Intl","NumberFormat","currency","maximumFractionDigits","format","CartesianGrid","strokeDasharray","Tooltip","formatter","Area","type","stroke","fillOpacity","fill","DropDown","state","countries","pickedCountryID","countryData","indicator","axios","get","then","res","removeContinents","filter","product","capitalCity","setState","e","this","console","log","pickedCountry","country","removeEmptyYears","indictor","countryName","name","defaultValue","onChange","event","storeChoice","target","disabled","hidden","map","React","Component","Header","class","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97ed6aba.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nimport './index.css';\nimport { AreaChart, Area, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { autoType } from 'd3';\n\nfunction Chart(props) {\n  const { data } = props;\n\n  return(\n    <div className=\"chart-draw\" style={{ width: '80%', height: 300, margin: '0 auto' }}>\n        <ResponsiveContainer>\n            <AreaChart width={730} height={250} data={data}\n            margin={{ top: 10, right: 0, left: 50, bottom: 0 }}>\n                <defs>\n                    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#3fbbf3\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#3fbbf3\" stopOpacity={0.15}/>\n                    </linearGradient>\n                </defs>\n                <XAxis                     \n                    label={{ value: \"Year\", position: 'bottom' }}\n                    reversed dataKey=\"date\" />\n                <YAxis\n                    label={{ value: \"GDP ($)\", position: 'top', offset:20 }}\n                    tickFormatter={(value) => new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: 'USD',\n                    maximumFractionDigits: 0,\n                    }).format(value)}/>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip formatter={(value) => new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: 'USD',\n                    maximumFractionDigits: 0,\n                    }).format(value)}/>\n                <Area type=\"monotone\" dataKey=\"value\"       \n                    stroke=\"#022d5b\" fillOpacity={1} fill=\"url(#colorUv)\" />\n            </AreaChart>\n        </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default Chart;\n","import React from 'react';\n\nimport axios from 'axios';\n\nimport Chart from './Chart.js';\n// import { getDefaultNormalizer } from '@testing-library/dom';\n\n\nexport default class DropDown extends React.Component {\n    state = {\n        countries: [],\n        pickedCountryID: false, // set this to false to conditionally hide sections until user chooses country\n        countryData: [],\n        indicator: \"\"\n    }\n\n    componentDidMount() {\n        axios.get('https://api.worldbank.org/v2/country?format=json')\n            .then(res => {\n                const countries = res.data[1]; /* Used 1 due to object structure - [0] contains header/total information */\n\n                var removeContinents = countries.filter(product => product.capitalCity !== \"\");\n                this.setState({ countries : removeContinents});\n\n                // console.log(countries)             \n            })\n    }\n\n    storeChoice(e) {\n        this.setState({ pickedCountryID: e });\n        if(e===\"\") {\n            console.log('error');\n        } else {\n            axios.get('https://api.worldbank.org/v2/country/' + e + '/indicator/NY.GDP.MKTP.CD?format=json')\n            .then(res => {\n                const countryData = res.data[1]; // [0] contains header/total information\n                this.setState({ pickedCountry: countryData[0].country.value });\n\n                // remove entries that have no value and set state\n                var removeEmptyYears = countryData.filter(product => product.value !== null);\n                this.setState({ countryData : removeEmptyYears});\n                \n                // console.log(this.state.countryData);\n                var indictor = this.state.countryData[0].indicator.value;\n                this.setState({ indicator : indictor});\n                }\n            )\n        }\n    }\n\n    render() {     \n        var countryName=this.state.pickedCountry;\n        var indicator = this.state.indicator;\n\n        return (\n            <div>\n                <div className=\"dropdown-container\">\n                    { this.state.pickedCountryID ? \n                    <p>Pick another country:</p>\n                    : <p>Pick a country to start:</p> }\n\n                    <select className=\"dropdown\" name=\"dropdown\" defaultValue={'none'} onChange={(event)=>this.storeChoice(event.target.value)}>\n                        <option value=\"none\" disabled hidden></option>\n                        { this.state.countries.map(country =>\n                            <option\n                                key={country.name}\n                                value={country.id}>\n                            {country.name}\n                            </option>)\n                        }\n                    </select>\n                </div>\n                <div className=\"chart-container\">\n                    { this.state.pickedCountryID ? \n                    <p className=\"explore-header\">{countryName}'s {indicator}</p>\n                    : null }\n\n\n                    { this.state.pickedCountryID ?\n                    <Chart data={this.state.countryData}></Chart>\n                    : null }\n                </div>\n            </div>\n        )\n    }\n}\n\n","export default __webpack_public_path__ + \"static/media/logo.cc4315f9.svg\";","import React from 'react';\n\nimport logo from './logo.svg';\n\n\nconst Header = () => {\n    return(\n        <div class=\"header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <header className=\"App-header\">\n            <h1>\n                Country Explorer\n            </h1>\n            <p>\n                WorldBank API UI\n            </p>\n            </header>\n        </div>\n    );\n}\n\n\nexport default Header;","import './App.css';\nimport React from 'react';\nimport DropDown from './DropDown.js';\nimport Chart from './Chart.js';\nimport Header from './Header.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <DropDown>\n        <Chart />\n      </DropDown>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
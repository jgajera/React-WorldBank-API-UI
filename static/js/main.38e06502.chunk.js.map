{"version":3,"sources":["logo.svg","DropDown.js","App.js","reportWebVitals.js","index.js"],"names":["DropDown","state","countries","pickedCountry","countryData","axios","get","then","res","data","removeContinents","filter","product","capitalCity","setState","console","log","e","this","removeEmptyYears","value","name","onChange","event","storeChoice","target","defaultValue","disabled","hidden","style","display","map","country","id","Data","date","React","Component","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAAe,G,OAAA,IAA0B,kC,qECUpBA,G,0NACjBC,MAAQ,CACJC,UAAW,GACXC,cAAe,GACfC,YAAa,I,wDAGjB,WAAsB,IAAD,OACjBC,IAAMC,IAAI,mDACLC,MAAK,SAAAC,GACF,IAAMN,EAAYM,EAAIC,KAAK,GAEvBC,EAAmBR,EAAUS,QAAO,SAAAC,GAAO,MAA4B,KAAxBA,EAAQC,eAC3D,EAAKC,SAAS,CAAEZ,UAAYQ,IAE5BK,QAAQC,IAAId,Q,yBAIxB,SAAYe,GAAI,IAAD,OACXC,KAAKJ,SAAS,CAAEX,cAAec,IAE/BZ,IAAMC,IAAI,uCAAyCW,EAAI,yCAClDV,MAAK,SAAAC,GACF,IAAMJ,EAAcI,EAAIC,KAAK,GAEzBU,EAAmBf,EAAYO,QAAO,SAAAC,GAAO,OAAsB,OAAlBA,EAAQQ,SAC7D,EAAKN,SAAS,CAAEV,YAAce,IAE9BJ,QAAQC,IAAIZ,Q,oBAKxB,WAAU,IAAD,OACL,OACI,gCACI,yDACA,yBAAQiB,KAAK,WAAWC,SAAU,SAACC,GAAD,OAAS,EAAKC,YAAYD,EAAME,OAAOL,QAAzE,UACI,wBAAQM,aAAa,GAAGC,UAAQ,EAACC,QAAM,EAACC,MAAO,CAACC,QAAS,QAASV,MAAM,KAEtEF,KAAKjB,MAAMC,UAAU6B,KAAI,SAAAC,GAAO,OAC9B,wBAEIZ,MAAOY,EAAQC,GAFnB,SAGCD,EAAQX,MAFAW,EAAQX,YAMzB,6BACMH,KAAKjB,MAAMG,YAAY2B,KAAI,SAAAG,GAAI,OAC7B,+BACCA,EAAKC,KADN,KACcD,EAAKd,QADVc,EAAKC,kB,GAnDAC,IAAMC,YCsB7BC,MA1Bf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,yBAAQH,UAAU,aAAlB,UACE,kDAGA,oDAYF,cAAC,EAAD,QCdSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.38e06502.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.cc4315f9.svg\";","import React from 'react';\n\nimport axios from 'axios';\n\nimport Chart from './Chart.js';\nimport { getDefaultNormalizer } from '@testing-library/dom';\n\nimport * as d3 from \"d3\";\n\n\nexport default class DropDown extends React.Component {\n    state = {\n        countries: [],\n        pickedCountry: [],\n        countryData: []\n    }\n\n    componentWillMount() {\n        axios.get('http://api.worldbank.org/v2/country?format=json')\n            .then(res => {\n                const countries = res.data[1]; /* Used 1 due to object structure - [0] contains header/total information */\n\n                var removeContinents = countries.filter(product => product.capitalCity !== \"\");\n                this.setState({ countries : removeContinents});\n\n                console.log(countries)             \n            })\n    }\n\n    storeChoice(e) {\n        this.setState({ pickedCountry: e });\n        // console.log(e) /* TODO: REMOVE */\n        axios.get('http://api.worldbank.org/v2/country/' + e + '/indicator/NY.GDP.MKTP.CD?format=json')\n            .then(res => {\n                const countryData = res.data[1]; /* Used 1 due to object structure - [0] contains header/total information */\n\n                var removeEmptyYears = countryData.filter(product => product.value !== null);\n                this.setState({ countryData : removeEmptyYears});\n                \n                console.log(countryData)\n                }\n            )\n    }\n\n    render() {    \n        return (\n            <div>\n                <p>Pick a country to start:</p>\n                <select name=\"dropdown\" onChange={(event)=>this.storeChoice(event.target.value)}>\n                    <option defaultValue='' disabled hidden style={{display: \"none\"}} value=''></option>\n\n                    { this.state.countries.map(country =>\n                        <option\n                            key={country.name}\n                            value={country.id}>\n                        {country.name}\n                        </option>)\n                    }\n                </select>\n                <ul>\n                    { this.state.countryData.map(Data =>\n                        <li key={Data.date}>\n                        {Data.date}, {Data.value}\n                        </li>)\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport DropDown from './DropDown.js';\n// import Chart from './Chart.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <header className=\"App-header\">\n        <h1>\n          Country Explorer\n        </h1>\n        <p>\n          WorldBank API UI\n        </p>\n        {/* <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      </header>\n      <DropDown>\n      </DropDown>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}